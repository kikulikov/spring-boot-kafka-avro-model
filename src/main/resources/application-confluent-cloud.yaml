application.topic.books: plaintext-books
application.topic.orders: plaintext-orders
application.topic.counts: plaintext-counts

application.topic.default.replicas: 3
application.topic.default.partitions: 1

---
spring:
  config:
    activate:
      on-profile: confluent-cloud
  kafka:
    bootstrap-servers: pkc-41wq6.eu-west-2.aws.confluent.cloud:9092
    properties:
      bootstrap.servers: pkc-41wq6.eu-west-2.aws.confluent.cloud:9092
      security.protocol: SASL_SSL
      sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username='RETRACTED' password='RETRACTED';
      sasl.mechanism: PLAIN
      schema.registry.url: https://psrc-8qmnr.eu-west-2.aws.confluent.cloud
      basic.auth.credentials.source: USER_INFO
      basic.auth.user.info: "RETRACTED:RETRACTED"
    producer:
      client-id: local-plaintext-avro-producer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    consumer:
      auto-offset-reset: latest
      group-id: local-plaintext-avro-consumer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      # By default, KafkaAvroDeserializerConfig.SPECIFIC_AVRO_READER_CONFIG is set to false,
      # so your KafkaAvroDeserializer will produce a GenericData by default, and not SpecificData (POJO).
      properties.specific.avro.reader: true
    streams:
      application-id: local-plaintext-avro-streams
      replication-factor: 1

spring.kafka.streams.properties.commit.interval.ms: 100
spring.kafka.streams.properties.default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndFailExceptionHandler
#spring.kafka.streams.properties.schema.registry.url=http://localhost:8081
#spring.kafka.streams.properties.state.dir=/var/lib/kafka-streams
#spring.kafka.streams.properties.state.cleanup.delay.ms: 600000
#spring.kafka.streams.properties.timestamp.extractor: org.apache.kafka.streams.processor.WallclockTimestampExtractor


